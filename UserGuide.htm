<!DOCTYPE html>
<html class="wf-opensans-i3-active wf-opensans-i4-active wf-opensans-i6-active wf-opensans-i7-active wf-opensans-i8-active wf-opensans-n3-active wf-opensans-n4-active wf-opensans-n6-active wf-opensans-n7-active wf-opensans-n8-active wf-active wf-opensanscondensed-i3-active wf-opensanscondensed-n3-active wf-opensanscondensed-n7-active"><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<link rel="icon" href="http://15462.courses.cs.cmu.edu/fall2016/assets/images/favicon/dragon.png" type="image/png">
<title>Scotty3D User Guide : Computer Graphics : 15-462/662 Fall 2016</title>

<link rel="stylesheet" href="UserGuide_files/l_002.css" media="all"><script src="UserGuide_files/open-sansn3i3n4i4n6i6n7i7n8i8.js"></script>
<link rel="stylesheet" href="UserGuide_files/l.css" media="all"><script src="UserGuide_files/open-sans-condensedn3i3n7.js"></script>

<script src="UserGuide_files/jquery_003.js"></script>
<script src="UserGuide_files/jquery_002.js"></script>
<script src="UserGuide_files/jquery.js"></script>

<script src="UserGuide_files/codemirror.js"></script>
<script src="UserGuide_files/markdown.js"></script>

<script type="text/javascript" src="UserGuide_files/MathJax.js">
</script>

<script type="text/x-mathjax-config;executed=true">
MathJax.Hub.Config({
  skipStartupTypeset: true,
  showProcessingMessages: false,
  tex2jax: {
    inlineMath: [['$','$'], ['\\(','\\)']],
    processEscapes: true
  }
});
</script>


<link rel="stylesheet" type="text/css" href="UserGuide_files/codemirror.css">

<script src="UserGuide_files/prettify.js"></script>
<link rel="stylesheet" type="text/css" href="UserGuide_files/prettify.css">

<!-- NOTE(kayvonf): place at end to override 3rd party tools -->
<link rel="stylesheet" type="text/css" href="UserGuide_files/main.css">

<script type="text/javascript">
var edit_comment_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_edit_comment";
var delete_comment_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_delete_comment";
var archive_comment_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_archive_comment";
var add_private_comment_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_add_private_comment";
var add_instructor_comment_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_add_instructor_comment";
var add_comment_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_add_comment";
var comment_vote_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_comment_vote";
var toggle_subscribe_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_toggle_subscribe";
var prompt_students_url = "http://15462.courses.cs.cmu.edu/fall2016/comments/ajax_prompt_students";
var keep_alive_url = "http://15462.courses.cs.cmu.edu/fall2016/keep_alive";
</script>

<script type="text/javascript" src="UserGuide_files/main.js"></script>
<script type="text/javascript" src="UserGuide_files/comments.js"></script>

<style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head>
<body><div id="MathJax_Message" style="display: none;"></div>

<div id="modal_overlay"></div>

<div class="main_container">

<div class="topbar">
<div class="topbar_left"><a href="http://15462.courses.cs.cmu.edu/fall2016/home">[Home]</a></div>
<div class="topbar_left"><a href="http://15462.courses.cs.cmu.edu/fall2016/courseinfo">[Info]</a></div>
<div class="topbar_left"><a href="http://15462.courses.cs.cmu.edu/fall2016/newsfeed">[Feed]</a></div>
<div class="topbar_left"><a href="http://15462.courses.cs.cmu.edu/fall2016/lectures">[Lectures]</a></div>
<div class="topbar_left"><a href="http://15462.courses.cs.cmu.edu/fall2016/exercises">[Quizzes]</a></div>
<!-- <div class="topbar_left"><a href="http://15462.courses.cs.cmu.edu/fall2016/projects">[Projects]</a></div> -->



<div class="topbar_right">

<a href="http://15462.courses.cs.cmu.edu/fall2016/users/login">[Login]</a>

</div>

</div>

<div class="content_container">

<!-- end of header -->






<div class="article_container">

<div class="common_title title">Scotty3D User Guide</div>

<hr size="1">


<div class="markdown article-content">
<p><img src="UserGuide_files/Scotty3DLogo.svg" alt="Scotty3DLogo"></p>

<p>Scotty3D is a full-featured software package for 3D modeling, 
rendering, and animation.  The only problem is that we've removed most 
of the features! :-)</p>

<p>Your job throughout the remainder of the semester is to bring 
Scotty3D to life by implementing core functionality.  This task has been
 broken up into three different assignments, where you will implement 
the <em>MeshEdit</em>, <em>PathTracer</em>, and <em>Animate</em> 
modules.  Thankfully, basic file parsing and GUI functionality (which is
 a total pain to write!) has already been implemented for you, so that 
you can focus on the core graphics tasks.</p>

<p>The documentation below provides some end-user information on how to <em>use</em> Scotty3D.  Additional developer information will be provided with the assignments.</p>

<h2>Overview</h2>

<h3>Modes and Actions</h3>

<p>The basic paradigm in Scotty3D is that there are three different <em>modes</em>, each of which lets you perform certain <em>action</em>.
  For instance, in MeshEdit mode, you can perform actions associated 
with modeling.  When in Animator mode you can perform actions associated
 with animation.  Etc.  Within a given mode, you can switch between 
actions by hitting the appropriate key; keyboard commands are listed 
below for each mode.  Note that <em>the input scheme may change depending on the mode</em>.  For instance, key commands in MeshEdit mode may result in very different actions in PathTracer mode.</p>

<p>The current mode and action are displayed in the upper-left corner of the screen.</p>

<h3>Scene Buffers</h3>

<p>Rather than a standard "undo/redo" paradigm, Scotty3D allows you to quickly load and write the scene to numbered <em>buffers</em>
 that can be quickly and easily swapped out.  Therefore, rather than 
having a linear history of all your edits, you can store interesting 
intermediate results, possibly coming back to them later.</p>

<p>In the Scotty3D interface there are 10 buffers, associated with the keys <code>0</code> through <code>9</code>.  To write the current scene to a buffer, you simply press the <code>w</code> key, followed by the buffer number you want to write to.  For instance, <code>w</code> and then <code>3</code> will write to buffer number three.  Likewise, to load a scene from a buffer, you press <code>l</code> (i.e., lowercase L) and then a number. <em>Note that loading a buffer will overwrite the current scene!</em>
  If you want to preserve the current scene for later use, you should 
write it into an unused buffer before loading an earlier buffer.  
Likewise, writing into a previously-used buffer will overwrite the 
contents of that buffer.  Finally, loading from an unused buffer will 
have no effect (the scene will remain unchanged).</p>

<p>Another nice feature of the buffer system in Scotty3D is that it is 
persistent across different sessions, i.e., if you quit Scotty3D (or it 
crashes...) you can still load your stored scenes from the buffers when 
you restart the program.  (These buffered scenes are stored as COLLADA 
files named <code>Scotty3D_bufferN.dae</code> in the same directory from which you execute Scotty3D, which means you can also copy them or open them in other applications.)</p>

<h2>MeshEdit</h2>

<p>When in MeshEdit mode, Scotty3D provides a polygon-based 3D modeler 
with basic subdivision capabilities.  The central modeling paradigm is 
"box modeling", i.e., starting with a simple cube, you can add 
progressively more detail to produce interesting 3D shapes.  You can 
also use <em>subdivision</em> to get smooth approximations of these shapes.</p>

<p>MeshEdit supports three actions (NAVIGATE, EDIT, and BEVEL), plus a 
collection of mesh editing commands that are available from any mode.</p>

<p>Note that MeshEdit (and more broadly, Scotty3D) will only operate on meshes that are <em>manifold</em> (i.e., the union of faces containing any given vertex <em>v</em>
 is a topological disk).  Likewise, all mesh operations in Scotty3D will
 preserve the manifold property, i.e., manifold input will always get 
mapped to manifold output.  This property is key for ensuring that many 
algorithms in Scotty3D are "well-behaved", and that it always produces 
nice output for other programs to use.</p>

<h3>NAVIGATE</h3>

<p>In this mode you can move the camera around, and inspect mesh 
elements by left-clicking on vertices, edges, faces, and halfedges.  
Information about these elements (including debugging information) will 
be shown in the <em>info panel</em> in the upper-right region of the screen.  The camera can be manipulated in three ways:</p>

<ul>
<li><em>Rotate</em> - left-clicking on the background (i.e., not on any scene object) and dragging will rotate the scene.</li>
<li><em>Zoom</em> - using the scroll wheel, or scrolling on your trackpad, will zoom the scene in and out.</li>
<li><em>Translate</em> - right-clicking on the background (or using 
multi-touch on a trackpad, e.g., two-finger click-and-drag) will 
translate the camera around the scene.</li>
</ul>

<p><img src="UserGuide_files/Scotty3DNavigate.jpg" height="300" width="478"></p>

<h3>EDIT</h3>

<p>In this mode you can change the geometry (i.e., the shape) of a mesh 
by clicking and dragging on mesh elements (vertices, edges, faces, and 
halfedges).  Clicking and dragging will translate an element in 
directions parallel to the view plane.  Clicking on an element will also
 invoke a <em>transformation widget</em>, which allows elements to be 
manipulated with a respect to a particular coordinate axis.  Note that 
the transformation widget has three modes of operation, which you can 
toggle through either by (i) repeatedly pressing the <code>e</code> key, or (ii) holding down a modifier key:
   * <em>Translate (control)</em> - move the selected element along X, 
Y, and Z axes.  Clicking the handle in the center will perform a 
free-translate (parallel to the screen).
   * <em>Rotate (alt/option)</em> - rotate the selected element around X, Y, and Z axes.
   * <em>Scale</em> (shift) - perform a nonuniform scale along X, Y, and
 Z axes.  Clicking the handle in the center will scale the element 
uniformly.</p>

<p>Note that on some platforms, the modifier keys may not be interpreted
 properly---in this case, you can still access the three tranformation 
modes by repeatedly pressing the <code>e</code> key.</p>

<p><img src="UserGuide_files/Scotty3DTransform.jpg" height="300" width="1018"></p>

<h3>BEVEL</h3>

<p>The bevel action creates a new copy of the selected element that is 
inset and offset from the original element.  Clicking and dragging on an
 element will perform a bevel; the horizontal motion of the cursor 
controls the amount by which the new element shrinks or expands relative
 to the original element, and the vertical motion of the cursor controls
 the amount by which the new element is offset (in the normal direction)
 from the original element.  It is important to note that a new element 
will be created upon click <em>even if no inset or offset is applied</em>.
  Therefore, if you're not careful you may end up with duplicate 
elements that are not immediately visible.  (To check, you can drag one 
of the vertices in Edit mode.)</p>

<p><img src="UserGuide_files/Scotty3DBevel.jpg" height="274" width="900"></p>

<p>There are three possible types of bevels:</p>

<ul>
<li><p><strong>VertexBevel</strong> - The selected vertex <em>v</em> is replaced by a face <em>f</em> whose vertices are connected to the edges originally incident on <em>v</em>.
  The new face is inset (i.e., shunken or expanded) by a 
user-controllable amount, and also offset by a user-controllable amount 
in the normal direction (not shown here).</p>

<p><img src="UserGuide_files/Scotty3DVertexBevel.svg" alt="Scotty3DVertexBevel"></p></li>
<li><p><strong>EdgeBevel</strong> - The selected edge <em>e</em> is replaced by a face <em>f</em> whose vertices are connected to the edges originally incident on the endpoints of <em>e</em>.  The new face is inset and offset by some user-controllable amount, as with the vertex bevel.</p>

<p><img src="UserGuide_files/Scotty3DEdgeBevel.svg" alt="Scotty3DEdgeBevel"></p></li>
<li><p><strong>FaceBevel</strong> - The selected face <em>f</em> is replaced by a new face <em>g</em>, as well as a ring of faces around <em>g</em>, such that the vertices of <em>g</em> connect to the original vertices of <em>f</em>.  The new face is inset and offset by some user-controllable amount.</p>

<p><img src="UserGuide_files/Scotty3DFaceBevel.svg" alt="Scotty3DFaceBevel"></p></li>
</ul>

<h3>CONNECTIVITY EDITING</h3>

<p>In addition to beveling, a variety of commands can be used to alter 
the connectivity of the mesh (for instance, splitting or collapsing 
edges).  These commands are applied by selecting a mesh element (in any 
mode) and pressing the appropriate key, as listed below.  Local mesh 
editing operations include:</p>

<ul>
<li><p><strong>EraseVertex</strong> - The selected vertex <em>v</em> together with all incident edges and faces will be replaced with a single face <em>f</em>, that is the union of all faces originally incident on <em>v</em>.</p>

<p><img src="UserGuide_files/Scotty3DEraseVertex.svg" alt="Scotty3DEraseVertex"></p></li>
<li><p><strong>EraseEdge</strong> - The selected edge <em>e</em> will be replaced with the union of the faces containing it, producing a new face <em>e</em> (if <em>e</em> is a boundary edge, nothing happens).</p>

<p><img src="UserGuide_files/Scotty3DEraseEdge.svg" alt="Scotty3DEraseEdge"></p></li>
<li><p><strong>EdgeCollapse</strong> - The selected edge <em>e</em> is replaced by a single vertex <em>v</em>. This vertex is connected by edges to all vertices previously connected to either endpoint of <em>e</em>.  Moreover, if either of the polygons containing <em>e</em> was a triangle, it will be replaced by an edge (rather than a degenerate polygon with only two edges).</p>

<p><img src="UserGuide_files/Scotty3DEdgeCollapse.svg" alt="Scotty3DEdgeCollapse"></p></li>
<li><p><strong>FaceCollapse</strong> - The selected face <em>f</em> is replaced by a single vertex <em>v</em>.  All edges previously connected to vertices of <em>f</em> are now connected directly to <em>v</em>.</p>

<p><img src="UserGuide_files/Scotty3DFaceCollapse.svg" alt="Scotty3DFaceCollapse"></p></li>
<li><p><strong>EdgeFlip</strong> - The selected edge <em>e</em> is 
"rotated" around the face, in the sense that each endpoint moves to the 
next vertex (in counter-clockwise order) along the boundary of the two 
polygons containing <em>e</em>.</p>

<p><img src="UserGuide_files/Scotty3DEdgeFlip.svg" alt="Scotty3DEdgeFlip"></p></li>
<li><p><strong>EdgeSplit</strong> - [Note: this method is for triangle meshes only!] The selected edge <em>e</em> is split at its midpoint, and the new vertex <em>v</em> is connected to the two opposite vertices (or one in the case of a surface with boundary).</p>

<p><img src="UserGuide_files/Scotty3DEdgeSplit.svg" alt="Scotty3DEdgeSplit"></p></li>
</ul>

<h3>GLOBAL MESH PROCESSING</h3>

<p>A number of commands can be used to create a more global change in 
the mesh (e.g., subdivision or simplification).  These commands can be 
applied by selecting any element in the target mesh (in any mode) and 
pressing the appropriate key.  Note that in scenes with multiple meshes 
(e.g., those used by the PathTracer), this command will be applied only 
to the selected mesh.</p>

<ul>
<li><strong>Triangulate</strong> - Each polygon is split into triangles.</li>
</ul>

<p><img src="UserGuide_files/Scotty3DTriangulate.jpg" height="300" width="620"></p>

<ul>
<li><strong>Linear subdivision</strong> - Each polygon in the selected 
mesh is split into quadrilaterals by inserting a vertex at the midpoint 
and connecting it to the midpoint of all edges.  New vertices are placed
 at the average of old vertices so that, e.g., flat faces stay flat, and
 old vertices remain where they were.</li>
</ul>

<p><img src="UserGuide_files/Scotty3DLinearSubdivision.jpg" height="308" width="800"></p>

<ul>
<li><strong>Catmull-Clark subdivision</strong> - Just as with linear 
subdivision, each polygon is split into quadrilaterals, but this time 
the vertex positions are updated according to the <a href="https://en.wikipedia.org/wiki/Catmull_Clark_subdivision_surface">Catmull-Clark subdivision rules</a>, ultimately generating a nice rounded surface.</li>
</ul>

<p><img src="UserGuide_files/Scotty3DCatmullClark.jpg" height="250" width="1002"></p>

<ul>
<li><strong>Loop subdivision</strong> - <em>[Note: this method is for triangle meshes only!]</em> Each triangle is split into four by connecting the edge midpoints.  Vertex positions are updated according to the <a href="https://en.wikipedia.org/wiki/Loop_subdivision_surface">Loop subdivision rules</a>.</li>
</ul>

<p><img src="UserGuide_files/Scotty3DLoopSubdivision.jpg" height="310" width="1031"></p>

<ul>
<li><strong>Isotropic Remeshing</strong> - <em>[Note: this method is for triangle meshes only!]</em>
 The mesh is resampled so that triangles all have roughly the same size 
and shape, and vertex valence is close to regular (i.e., about six edges
 incident on every vertex).</li>
</ul>

<p><img src="UserGuide_files/Scotty3DIsotropicRemesh.jpg" height="400" width="695"></p>

<ul>
<li><strong>Simplification</strong> - <em>[Note: this method is for triangle meshes only!]</em>
 The number of triangles in the mesh is reduced by a factor of about 
four, aiming to preserve the appearance of the original mesh as closely 
as possible.</li>
</ul>

<p><img src="UserGuide_files/Scotty3DSimplification.jpg" height="265" width="600"></p>

<h3>KEY COMMANDS</h3>

<table>
<thead>
<tr>
  <th>Key</th>
  <th>Action</th>
</tr>
</thead>
<tbody>
<tr>
  <td><code>space</code></td>
  <td>switch to navigate mode</td>
</tr>
<tr>
  <td><code>tab</code></td>
  <td>show/hide info panel</td>
</tr>
<tr>
  <td>hold <code>control</code></td>
  <td>temporarily switch to translation in edit mode</td>
</tr>
<tr>
  <td>hold <code>shift</code></td>
  <td>temporarily switch to scaling in edit mode</td>
</tr>
<tr>
  <td>hold <code>alt</code>/<code>option</code></td>
  <td>temporarily switch to rotation in edit mode</td>
</tr>
<tr>
  <td><code>e</code></td>
  <td>cycle through <strong>(e)</strong>dit modes</td>
</tr>
<tr>
  <td><code>b</code></td>
  <td>toggle <strong>b</strong>evel mode</td>
</tr>
<tr>
  <td><code>n</code></td>
  <td>select <strong>n</strong>ext halfedge</td>
</tr>
<tr>
  <td><code>t</code></td>
  <td>select <strong>t</strong>win halfedge</td>
</tr>
<tr>
  <td><code>h</code></td>
  <td>select <strong>h</strong>alfedge of current element</td>
</tr>
<tr>
  <td><code>T</code></td>
  <td><strong>T</strong>riangulate mesh</td>
</tr>
<tr>
  <td><code>s</code></td>
  <td><strong>s</strong>ubdivide Catmull-Clark</td>
</tr>
<tr>
  <td><code>S</code></td>
  <td><strong>S</strong>ubdivide linear</td>
</tr>
<tr>
  <td><code>backspace</code>/<code>delete</code></td>
  <td>erase selected edge</td>
</tr>
<tr>
  <td><code>f</code></td>
  <td><strong>f</strong>lip selected edge</td>
</tr>
<tr>
  <td><code>c</code></td>
  <td><strong>c</strong>ollapse selected edge</td>
</tr>
<tr>
  <td><code>p</code></td>
  <td>s<strong>p</strong>lit selected edge <em>triangle meshes only!</em></td>
</tr>
<tr>
  <td><code>u</code></td>
  <td><strong>u</strong>psample <em>triangle meshes only!</em></td>
</tr>
<tr>
  <td><code>i</code></td>
  <td><strong>i</strong>sotropic remesh <em>triangle meshes only!</em></td>
</tr>
<tr>
  <td><code>d</code></td>
  <td><strong>d</strong>ownsample <em>triangle meshes only!</em></td>
</tr>
<tr>
  <td><code>w</code> then <code>0</code>--<code>9</code></td>
  <td><strong>w</strong>rite scene to numbered buffer</td>
</tr>
<tr>
  <td><code>l</code> then <code>0</code>--<code>9</code></td>
  <td><strong>l</strong>oad scene from numbered buffer**</td>
</tr>
</tbody>
</table>

<h2>PathTracer</h2>

<p>For assignment 3, you will implement Scotty3D's path tracer that can 
render pictures with global illumination effects.  The first part of the
 assignment will focus on providing an efficient implementation of <strong>ray-scene geometry queries</strong>.  In the second half of the assignment you will <strong>add the ability to simulate how light bounces around the scene</strong>, which will allow your renderer to synthesize much higher-quality images.</p>

<h3>Rendered Output Mode and BVH Visualization Mode</h3>

<p>In addition to the mesh edit mode, the app features two other modes. Pressing the <kbd>R</kbd> key toggles display to the rendered output of your ray tracer.  If you press <kbd>R</kbd>
 in the starter code, you will see a black screen (You have not 
implemented your ray tracer yet! ).  However, a correct implementation 
of the assignment will make pictures of the cow that looks like the one 
below.</p>

<p><img src="UserGuide_files/cow_render.png" alt="PathTracer GUI"></p>

<p>Pressing <kbd>E</kbd> returns to the mesh edit mode.  Pressing <kbd>V</kbd>
 displays the BVH visualizer mode, which will be a helpful visualization
 tool for debugging the bounding volume hierarchy you will need to 
implement for this assignment.</p>

<p>Importantly, both <code>R</code> and <code>V</code> mode depends on 
correct implementation of triangulation, especially when rendering 
generic polygon meshes. Without triangulation, generic polygon meshes 
will not be correctly in both these modes.</p>

<h3>KEY COMMANDS</h3>

<table>
<thead>
<tr>
  <th>Command</th>
  <th align="left">Key</th>
</tr>
</thead>
<tbody>
<tr>
  <td>Return to mesh edit mode</td>
  <td align="left"><kbd>M</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Show BVH visualizer mode</td>
  <td align="left"><kbd>V</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Show ray traced output</td>
  <td align="left"><kbd>R</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Decrease area light samples (RT mode)</td>
  <td align="left"><kbd>-</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Increase area light samples (RT mode)</td>
  <td align="left"><kbd>+</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Decrease samples (camera rays) per pixel</td>
  <td align="left"><kbd>[</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Increase samples (camera rays) per pixel</td>
  <td align="left"><kbd>]</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Descend to left child (BVH viz mode)</td>
  <td align="left"><kbd>&lt;</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Descend to right child (BVH viz mode)</td>
  <td align="left"><kbd>&gt;</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Move to parent node (BVH viz mode)</td>
  <td align="left"><kbd>?</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Reset camera to default position</td>
  <td align="left"><kbd>SPACE</kbd></td>
</tr>
<tr>
  <td>Edit a vertex position</td>
  <td align="left">(left-click and drag on vertex)</td>
</tr>
<tr>
  <td>Rotate camera</td>
  <td align="left">(left-click and drag on background)</td>
</tr>
<tr>
  <td>Zoom camera</td>
  <td align="left">(mouse wheel)</td>
</tr>
<tr>
  <td>Dolly (translate) camera</td>
  <td align="left">(right-click and drag on background)</td>
</tr>
</tbody>
</table>

<p>The following are <code>pathtracer</code> app command line options, which are provided for convenience and to debug debugging:</p>

<h3>Commandline Options</h3>

<p>To run the application, other than this command
<code>./scotty3d ../cube.dae</code>
we provide the following commandline options for convenience and debugging purposes.</p>

<table>
<thead>
<tr>
  <th>Commandline Option</th>
  <th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
  <td><code>-t &lt;INT&gt;</code></td>
  <td align="left">Number of threads used for rendering (default=1)</td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td><code>-s &lt;INT&gt;</code></td>
  <td align="left">Set the number of camera rays per pixel (default=1) (should be a power of two)</td>
</tr>
<tr>
  <td><code>-l &lt;INT&gt;</code></td>
  <td align="left">Number of samples to integrate light from area light 
sources (default=1, higher numbers decrease noise but increase rendering
 time)</td>
</tr>
<tr>
  <td><code>-m &lt;INT&gt;</code></td>
  <td align="left">Maximum ray "depth" (the number of bounces on a ray path before the path is terminated)</td>
</tr>
<tr>
  <td><code>-h</code></td>
  <td align="left">Print command line help</td>
</tr>
</tbody>
</table>

<h2>Animator</h2>

<p>You can enter the animator mode by pressing 'a' or 'A' in any of the 
other modes. If you wish to edit the underlying skeleton of the mesh, 
you can toggle the ghosted (semi-transparent) mode by pressing 'g' or 
'G'.</p>

<h3>Rigging Action</h3>

<p>You can enter the create joint action by pressing 'c' or 'C' after 
you enter animator mode. You can create new joints by first selecting a 
parent joint, then clicking anywhere else on the screen. From thereon, 
you can keep clicking on the screen to create a chain of joints. If you 
want to branch off at a joint, simply click on the joint to branch off 
of, then start another chain from there.</p>

<p>You can exit create joint action by pressing 'c'/'C' again or pressing any other key that takes you into a different action.</p>

<h3>Editing Skinning Weight Threshold Radius</h3>

<p>Each joint has a radius associated with it which controls which part 
of the mesh it affects when it is animated. The radius is visualized by 
the blue capsule around each joint segment. You can press 'd' or 'D' to 
trigger the action which allows you to edit the radius of this capsule. 
After you enter <code>Change Threshold Radius</code> action, you can click on a joint and drag the mouse up or down while left clicking to change its threshold radius.</p>

<h3>Posing Action</h3>

<p>After laying out the skeleton and adjusting the skinning weight 
radius, you can start posing the character in the posing action. You can
 enter this action by pressing 'p' or 'P'. In posing action, you may 
select any joint and use the rotation widgets to change the joint 
angles.</p>

<h3>Toggling Linear Blend Skinning with Threshold</h3>

<p>You can press 'u' or 'U' to toggle between linear blend skinning with or without threshold.</p>

<h3>Inverse Kinematics</h3>

<p>Multiple targets can be specified for IK purposes. To specify an 
additional target, just select a new joint and right click. To clear all
 targets, press 'i' or 'I'.</p>

<h3>Animation Keyframe</h3>

<p>A new keyframe is created whenever you edit any of the objects in the
 scene. You should first select the appropriate time on the timeline 
below, before you make any changes to the objects in the scene. If you 
want to animate the characters, you should do that by animating the 
joints you created using the rigging action above. The joints are meant 
to be rotated only. You may cycle through different modes of editing by 
pressing the 'e' or TAB key.</p>

<h3>Saving the Skeleton and Animation</h3>

<p>The read and write to buffer functions have been upgraded to also 
read and write the skeleton and animation information. Switch to mesh 
edit mode first, then press 'l' for load or 'w' for write and numbers 
from (0-9) to read or write your work.</p>

<h3>Physical Simulation</h3>

<p>Whenever the timeline is playing, a simulation of solving the wave 
equation:
 $$f^{''} = \Delta f$$
on all meshes in the scene, where values of $f$ are shown as offsets in 
the normal direction. Without any specified initial conditions, this 
wont change the mesh at all, but when conditions are specified this will
 give the appearance of waves propagating along the surface of the mesh.
 An offset is specified by using the wave action, triggered by pressing 
'w' or 'W', which will allow you to move vertices in the normal 
direction, to give them an initial offset, and to give a more natural 
looking result, will give a Gaussian smoothed offset to a neighborhood 
of the vertex. There is no way to keyframe waves or save state about the
 waves. To completely reset the offsets of the mesh, press 'z' or 'Z'. 
The wave simulation preserves the average offset across all vertices, so
 when a vertex is dragged up, others will move slightly down, and vice 
versa, in order to preserve this at 0.</p>

<p>There are 2 different integrators that can be used to simulate waves,
 Forward Euler and Symplectic Euler, and Forward Euler is chosen by 
default. Forward Euler is a less stable integration approximation, so 
waves simulated with it may 'blow up' and produce unnatural results!</p>

<p>Additionally, different timesteps can be supplied, by using the '+' 
and '-' keys. Note that larger timesteps will usually lead to less 
stable results! Different damping factors can also be supplied by using 
SHIFT + '+' or '-'. A damping factor of 0.0 means there is no damping, 
and a value of 1.0 won't propagate any waves, it'll just smooth the mesh
 out until its back to its original shape.</p>

<h3>KEY COMMANDS</h3>

<table>
<thead>
<tr>
  <th>Command</th>
  <th align="left">Key</th>
</tr>
</thead>
<tbody>
<tr>
  <td>Enter animate mode</td>
  <td align="left"><kbd>A</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Enter create joint action</td>
  <td align="left"><kbd>C</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Enter capsule radius edit action</td>
  <td align="left"><kbd>D</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Toggle ghosted mode (semi-transparent)</td>
  <td align="left"><kbd>G</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Enter Inverse Kinematics action</td>
  <td align="left"><kbd>I</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Return to mesh edit mode</td>
  <td align="left"><kbd>M</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Enter object edit action</td>
  <td align="left"><kbd>O</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Enter posing action</td>
  <td align="left"><kbd>P</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Toggle linear blend skinning with threshold</td>
  <td align="left"><kbd>U</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Enter wave action</td>
  <td align="left"><kbd>W</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Reset all wave offsets</td>
  <td align="left"><kbd>Z</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Raytrace Animation (From beginning)</td>
  <td align="left"><kbd>N</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Rasterize Animation (From beginning)</td>
  <td align="left"><kbd>T</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Cycle through different edit widgets in object edit action</td>
  <td align="left"><kbd>E or <kbd>Tab</kbd></kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Increase / Decrease Timestep for Physical Simulation</td>
  <td align="left"><kbd>PLUS/MINUS</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Increase / Decrease Damping Factor for Physical Simulation</td>
  <td align="left"><kbd>SHIFT + PLUS/MINUS</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Change Simulation to use Forward Euler</td>
  <td align="left"><kbd>F</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Change Simulation to use Symplectic Euler</td>
  <td align="left"><kbd>S</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Edit a vertex position</td>
  <td align="left">(left-click and drag on vertex)</td>
</tr>
<tr>
  <td>Rotate camera</td>
  <td align="left">(left-click and drag on background)</td>
</tr>
<tr>
  <td>Zoom camera</td>
  <td align="left">(mouse wheel)</td>
</tr>
<tr>
  <td>Dolly (translate) camera</td>
  <td align="left">(right-click and drag on background)</td>
</tr>
<tr>
  <td>Reach for Point under Cursor with IK</td>
  <td align="left">(right-click and hold in IK mode)</td>
</tr>
</tbody>
</table>

<h3>TIMELINE CONTROLS</h3>

<table>
<thead>
<tr>
  <th>Command</th>
  <th align="left">Key</th>
</tr>
</thead>
<tbody>
<tr>
  <td>Play / Pause</td>
  <td align="left"><kbd>Space</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Move Forward / Backwards</td>
  <td align="left"><kbd>Right/Left</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Step Forward / Backwards (One Frame)</td>
  <td align="left"><kbd>ALT + Right/Left</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Jump to Beginning / End</td>
  <td align="left"><kbd>CTRL + Right/Left</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Move to Next/Previous Keyframe</td>
  <td align="left"><kbd>SHIFT + Right/Left</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Increase / Decrease Timeline Length (1 second)</td>
  <td align="left"><kbd>Up/Down</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Toggle Looping</td>
  <td align="left"><kbd>L</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Make this frame a keyframe for Selected Object</td>
  <td align="left"><kbd>K</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Make thie frame a keyframe for All Objects</td>
  <td align="left"><kbd>SHIFT + K</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Delete Keyframe for Selected Object</td>
  <td align="left"><kbd>Delete/Backspace</kbd></td>
</tr>
<tr>
  <td></td>
  <td align="left"></td>
</tr>
<tr>
  <td>Delete Keyframe for All Objects</td>
  <td align="left"><kbd>SHIFT + Delete/Backspace</kbd></td>
</tr>
</tbody>
</table></div>




</div>

<hr size="1">

<div class="footer">
     Copyright 2016 Carnegie Mellon University
</div>


</div>  <!-- end of content_container (defined in header.php) -->
</div>  <!-- end main_container (defined in header.php) -->





</body></html>